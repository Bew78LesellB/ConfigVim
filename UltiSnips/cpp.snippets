priority -50

extends c

# We want to overwrite everything in parent ft.
priority -49

###########################################################################
#                            TextMate Snippets                            #
###########################################################################

# TODO: how to set length of ======= to 80 columns automatically..
snippet comline "hr comment line" b
//==${1:=}=========================================================================
${0}
endsnippet

snippet claexcept "class .. (Exception class)"
class ${1:`!p snip.rv = snip.basename or "ClassName"`} : public std::exception
{
public:
	${1/(\w+).*/$1/}(${2:arguments});
	virtual ~${1/(\w+).*/$1/}() throw();

public:
	const char * what() const throw();

private:
	${0:/* data */}
};
endsnippet

snippet clacanon "class .. (Canonical class)"
class ${1:`!p snip.rv = snip.basename or "ClassName"`}
{
public:
	${1/(\w+).*/$1/}(${2:arguments});
	${1/(\w+).*/$1/}(${1/(\w+).*/$1/} const & other);
	${1/(\w+).*/$1/} & operator=(${1/(\w+).*/$1/} const & other);
	virtual ~${1/(\w+).*/$1/}();

protected:
	${0:/* data */}
};
endsnippet

snippet ctor "Constructor implementation"
${1:`!p snip.rv = snip.basename or "ClassName"`}::$1(${2})${3: :}
{${4}
}
${0}
endsnippet

snippet dtor "Destructor implementation"
${1:`!p snip.rv = snip.basename or "ClassName"`}::~$1()
{${2}
}
${0}
endsnippet

snippet ns "namespace .. (namespace)"
namespace${1/.+/ /m}${1:`!p snip.rv = snip.basename or "name"`}
{
	${VISUAL}${0}
}
endsnippet

snippet map "std::map (map)"
std::map<${1:key}, ${2:value}> map$0;
endsnippet

snippet vector "std::vector (v)"
std::vector<${1:char}> v$0;
endsnippet

snippet tp "template <typename ..> (template)"
template <typename ${1:_InputIter}>
endsnippet

snippet cout "std::cout std::endl"
std::cout << ${1} << std::endl;${0}
endsnippet

snippet incio "include iostream" b
#include <iostream>
endsnippet

# vim:ft=snippets:
